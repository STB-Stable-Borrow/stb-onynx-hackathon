{
  "contractName": "IGatewayTokenVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        }
      ],
      "name": "verifyToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "verifyToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"}],\"name\":\"verifyToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"verifyToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verifyToken(address,uint256)\":{\"details\":\"Triggered by external contract to verify if `slot` and token `owner` are correct. Checks if token exists in gateway token contract, `slot` still active, and not expired. Performs additional checks to verify that `owner` is not blacklisted globally.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@identity.com/gateway-protocol-eth/contracts/interfaces/IGatewayTokenVerifier.sol\":\"IGatewayTokenVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@identity.com/gateway-protocol-eth/contracts/interfaces/IGatewayTokenVerifier.sol\":{\"keccak256\":\"0xdb8f09bed76937ef9b7c60735a951f24807e56992c349bdc0c835b4c03b902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11d0bc11cc15bdacaac4edd71a7c332009c38475209ba2cb630e8f5a89eb7bc3\",\"dweb:/ipfs/QmfXWxoxjHCZDLLb2kQAi4znKAcTYv78sXEDG3bKbQEAK7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\npragma experimental ABIEncoderV2;\n\ninterface IGatewayTokenVerifier {\n    /**\n     * @dev Triggered by external contract to verify if `slot` and token `owner` are correct.\n     *\n     * Checks if token exists in gateway token contract, `slot` still active, and not expired.\n     * Performs additional checks to verify that `owner` is not blacklisted globally.\n     */\n    function verifyToken(address owner, uint256 network) external view returns (bool);\n\n    function verifyToken(uint256 tokenId) external view returns (bool);\n}\n",
  "sourcePath": "@identity.com/gateway-protocol-eth/contracts/interfaces/IGatewayTokenVerifier.sol",
  "ast": {
    "absolutePath": "@identity.com/gateway-protocol-eth/contracts/interfaces/IGatewayTokenVerifier.sol",
    "exportedSymbols": {
      "IGatewayTokenVerifier": [
        74
      ]
    },
    "id": 75,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 55,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "id": 56,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IGatewayTokenVerifier",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 74,
        "linearizedBaseContracts": [
          74
        ],
        "name": "IGatewayTokenVerifier",
        "nameLocation": "101:21:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 57,
              "nodeType": "StructuredDocumentation",
              "src": "129:293:1",
              "text": " @dev Triggered by external contract to verify if `slot` and token `owner` are correct.\n Checks if token exists in gateway token contract, `slot` still active, and not expired.\n Performs additional checks to verify that `owner` is not blacklisted globally."
            },
            "functionSelector": "ff17e232",
            "id": 66,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyToken",
            "nameLocation": "436:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "456:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "448:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "network",
                  "nameLocation": "471:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "463:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:32:1"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "503:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:6:1"
            },
            "scope": 74,
            "src": "427:82:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "ff85a975",
            "id": 73,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyToken",
            "nameLocation": "524:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "544:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "536:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:17:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "576:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "575:6:1"
            },
            "scope": 74,
            "src": "515:67:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 75,
        "src": "91:493:1",
        "usedErrors": []
      }
    ],
    "src": "32:553:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-05-28T18:29:06.549Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "verifyToken(address,uint256)": {
        "details": "Triggered by external contract to verify if `slot` and token `owner` are correct. Checks if token exists in gateway token contract, `slot` still active, and not expired. Performs additional checks to verify that `owner` is not blacklisted globally."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}